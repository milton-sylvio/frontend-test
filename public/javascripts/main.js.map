{"version":3,"sources":["_main.js"],"names":["Main","init","readJson","verifyXmlHttp","xmlhttp","window","XMLHttpRequest","ActiveXObject","calcPorcentagem","positive","negative","porcentagem","total","result","Math","round","fileJson","onreadystatechange","readyState","status","dadosJSON","JSON","parse","responseText","dados","data","sort","a","b","x","list","forEach","d","pos","neg","valPos","parseInt","valNeg","results","resultPos","resultNeg","listas","name","picture","description","document","getElementById","innerHTML","e","eval","open","setRequestHeader","send"],"mappings":"aAAA;;;;;GAMA,GAAMA,MAAO,CAEZC,KAAM,eAAY,CAEjB,KAAKC,QAAL,EACA,CALW,CAOZC,cAAe,wBAAW,CAEzB,GAAIC,eAAJ,CAEA;AACA,GAAIC,OAAOC,cAAX,CAA2B,CAC1BF,QAAU,GAAIE,eACd,CAFD,IAEO,CACN;AACAF,QAAU,GAAIG,cAAJ,CAAkB,mBAAlB,CACV,CAED,MAAOH,QACP,CApBW,CAsBZI,gBAAiB,yBAASC,QAAT,CAAmBC,QAAnB,CAA6B,CAE7C,GAAMC,aAAc,GAApB,CACA,GAAIC,OAAQH,SAAWC,QAAvB,CACGG,OAAS,EADZ,CAGE,GAAGD,MAAQ,CAAX,CAAc,CACbC,OAAO,UAAP,EAAqBC,KAAKC,KAAL,CAAYN,SAAWE,WAAZ,CAA2BC,KAAtC,CAArB,CAAmE;AACnEC,OAAO,UAAP,EAAqBF,YAAcE,OAAO,UAAP,CACnC,CAHD,IAGO,CACNA,OAAO,UAAP,EAAqB,CAArB,CACAA,OAAO,UAAP,EAAqB,CACrB,CAED,MAAOA,OACT,CArCW,CAuCZX,SAAU,mBAAW,CAEpB,GAAME,SAAU,KAAKD,aAAL,EAAhB,CACGa,SAAW,cADd,CAGC;AACAZ,QAAQa,kBAAR,CAA6B,UAAU,CAEtC;AACA,GAAGb,QAAQc,UAAR,GAAuB,CAAvB,EAA4Bd,QAAQe,MAAR,GAAmB,GAAlD,CAAuD,CACtD,GAAIC,iBAAJ,CAEA,GAAI,CACHA,UAAYC,KAAKC,KAAL,CAAWlB,QAAQmB,YAAnB,CAAZ,CAEA,GAAIC,OAAQJ,UAAUK,IAAtB,CAEA;AACDD,MAAME,IAAN,CAAY,SAASC,CAAT,CAAWC,CAAX,CAAc,CACtB,GAAGD,EAAElB,QAAF,CAAamB,EAAEnB,QAAlB,CAA4B,MAAO,EAAP,CAC5B,GAAGkB,EAAElB,QAAF,CAAamB,EAAEnB,QAAlB,CAA4B,MAAO,CAAC,CAAR,CAE5B,MAAO,EACV,CALD,EAOA,GAAIoB,GAAI,CAAR,CACCC,KAAO,EADR,CAGAN,MAAMO,OAAN,CAAc,SAASC,CAAT,CAAW,CAEvB,GAAIC,KAAMD,EAAEvB,QAAZ,CACCyB,IAAMF,EAAEtB,QADT,CAECyB,OAAUF,GAAD,CAAQG,SAASH,GAAT,CAAR,CAAwB,CAFlC,CAGCI,OAAUH,GAAD,CAAQE,SAASF,GAAT,CAAR,CAAwB,CAHlC,CAICI,QAAUtC,KAAKQ,eAAL,CAAqB2B,MAArB,CAA6BE,MAA7B,CAJX,CAKCE,UAAYD,QAAQ,UAAR,CALb,CAMCE,UAAaF,QAAQ,UAAR,EAAsB,CAAvB,CAA6BA,QAAQ,UAAR,CAA7B,CAAmD,GANhE,CAQA,GAAMG,wDAC2CT,EAAEU,IAD7C,kKAIUV,EAAEW,OAJZ,WAI6BX,EAAEU,IAJ/B,8FAMsCb,CANtC,sFAQ6BG,EAAEU,IAR/B,iEASmCV,EAAEY,WATrC,yRAgB+BL,SAhB/B,iMAoB+BC,SApB/B,6GAAN,CA0BAK,SAASC,cAAT,CAAwB,aAAxB,EAAuCC,SAAvC,EAAoDN,MAApD,CAEAZ,GACA,CAvCF,CAyCC,CAAC,MAAMmB,CAAN,CAAS,CACVC,KAAK,gBAAkB7C,QAAQmB,YAA1B,CAAyC,IAA9C,CACA,CACD,CACD,CAnED,CAqEA;AACAnB,QAAQ8C,IAAR,CAAa,KAAb,CAAoBlC,QAApB,CAA8B,IAA9B,EAEA;AACAZ,QAAQ+C,gBAAR,CAAyB,cAAzB,CAAyC,mCAAzC,EAEA;AACA/C,QAAQgD,IAAR,CAAa,IAAb,CACD,CA1HW,CAAb,CA6HApD,KAAKC,IAAL","file":"main.js","sourcesContent":["/**\n * Script de exibição do ranking do programa A Fazenda\n * \n * @author Milton Sylvio da Silva Junior <miltinho_sylvio@hotmail.com>\n * \n */\nconst Main = {\n\n\tinit: function () {\n\n\t\tthis.readJson();\n\t},\n\n\tverifyXmlHttp: function() {\n\n\t\tlet xmlhttp;\n\n\t\t// Verifica se suporta XMLHttpRequest\n\t\tif (window.XMLHttpRequest) {\n\t\t\txmlhttp = new XMLHttpRequest();\n\t\t} else {\n\t\t\t// Adicionamos o ActiveXObject da Microsoft (para IE)\n\t\t\txmlhttp = new ActiveXObject('Microsoft.XMLHTTP');\n\t\t}\n\n\t\treturn xmlhttp;\n\t},\n\n\tcalcPorcentagem: function(positive, negative) {\n\n\t\tconst porcentagem = 100;\n\t\tlet total = positive + negative,\n\t\t  \tresult = [];\n\n\t  \tif(total > 0) {\n\t\t  \tresult['positivo'] = Math.round((positive * porcentagem) / total); // Aplicamos a regra de 3 para calcular a porcentagem do valor positivo\n\t  \t\tresult['negativo'] = porcentagem - result['positivo'];\n\t  \t} else {\n\t\t  \tresult['positivo'] = 0;\n\t  \t\tresult['negativo'] = 0;\n\t  \t}\n\n  \t\treturn result;\n\t},\t\n\n\treadJson: function() {\n\t\t\n\t\tconst xmlhttp = this.verifyXmlHttp(), \n\t\t\t  fileJson = 'fazenda.json';\n\n\t\t // Verificamos os estados da requisição\n\t\t xmlhttp.onreadystatechange = function(){\n\n\t\t\t // Verifica se a página foi carregada corretamente\n\t\t\t if(xmlhttp.readyState === 4 && xmlhttp.status === 200) {\n\t\t\t\t let dadosJSON;\n\t\t\t\t \n\t\t\t\t try {\n\t\t\t\t \tdadosJSON = JSON.parse(xmlhttp.responseText);\n\n\t\t\t\t \tlet dados = dadosJSON.data;\n\n\t\t\t\t \t// Ordenamos os personagens por \n\t\t\t\t\tdados.sort( function(a,b) {\n\t\t\t\t\t    if(a.positive < b.positive) return 1;\n\t\t\t\t\t    if(a.positive > b.positive) return -1;\n\n\t\t\t\t\t    return 0;\n\t\t\t\t\t});\n\n\t\t\t\t\tlet x = 1,\n\t\t\t\t\t\tlist = [];\n\n\t\t\t\t\tdados.forEach(function(d){\n\n\t\t\t\t\t \tlet pos = d.positive,\n\t\t\t\t\t \t\tneg = d.negative,\n\t\t\t\t\t \t\tvalPos = (pos) ? parseInt(pos) : 0,\n\t\t\t\t\t \t\tvalNeg = (neg) ? parseInt(neg) : 0,\n\t\t\t\t\t \t\tresults = Main.calcPorcentagem(valPos, valNeg),\n\t\t\t\t\t \t\tresultPos = results['positivo'], \n\t\t\t\t\t \t\tresultNeg = (results['negativo'] > 0 ) ? results['negativo'] : 100;\n\n\t\t\t\t \t\tconst listas = \n\t\t\t\t \t\t\t`<a href=\"#\" class=\"list-ranking-item\" title=\"${d.name}\" role=\"button\">\n\t\t\t\t \t\t\t\t<div class=\"list-ranking-media\">\n\t\t\t\t \t\t\t\t\t<span class=\"list-ranking-media-img\">\n\t\t\t\t \t\t\t\t\t\t<img src=\"${d.picture}\" alt=\"${d.name}\">\n\t\t\t\t \t\t\t\t\t</span>\n\t\t\t\t \t\t\t\t\t<span class=\"list-ranking-media-label\">${x}</span>\n\t\t\t\t \t\t\t\t</div>\n\t\t\t\t \t\t\t\t<h2 class=\"list-ranking-title\">${d.name}</h2>\n\t\t\t\t \t\t\t\t<h3 class=\"list-ranking-description\">${d.description}</h3>\n\n\t\t\t\t \t\t\t\t<div class=\"list-ranking-tooltip\">\n\t\t\t\t \t\t\t\t\t<div class=\"arrow\"></div>\n\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"tooltipt-title\">Gostam</span>\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"tooltipt-content\">${resultPos}%</span>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"tooltipt-title\">Não Gostam</span>\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"tooltipt-content\">${resultNeg}%</span>\n\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t \t\t\t\t</div>\n\t\t\t\t \t\t\t</a>`;\n\n\t\t\t \t\t\tdocument.getElementById('listRanking').innerHTML += listas;\n\n\t\t\t\t\t \tx++;\n\t\t\t\t\t });\n\n\t\t\t\t } catch(e) {\n\t\t\t\t\t eval(\"dadosJSON = (\" + xmlhttp.responseText + \");\");\n\t\t\t\t }\n\t\t\t }\n\t\t }\n\t\t \n\t\t // Abre a requisição com o método e url\n\t\t xmlhttp.open('GET', fileJson, true);\n\n\t\t // Modifica o MimeType da requisição\n\t\t xmlhttp.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n\n\t\t // Envia os valores\n\t\t xmlhttp.send(null);\n\t}\n};\n\nMain.init();"]}